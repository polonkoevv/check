version: '3.8'

services:
  app:
    image: ${DOCKER_IMAGE}:latest
    container_name: golibrary
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - GIN_MODE=release
    networks:
      - library-network

  db:
    image: postgres:15-alpine
    container_name: library-db
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - library-network

networks:
  library-network:
    driver: bridge

volumes:
  postgres-data:
    name: library-postgres-data 