worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
}

http {

    # Основные настройки
    include /etc/nginx/mime.types;
    default_type application/json;

    # 4 Ограничение числа подключений 
    limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;

    # 4 Скрытие версий серверного ПО
    server_tokens off;

    # 4 Защита от крупных запросов 
    client_max_body_size 2M;
    
    # 5 Логирование и мониторинг
    access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
    error_log /var/log/nginx/error.log warn;

    # 2 Балансировка нагрузки
    upstream backend {
        least_conn;  # Использование сервера с наименьшим числом соединений
        server library-app-one:8080 max_fails=3 fail_timeout=30s;
        server library-app-two:8080 max_fails=3 fail_timeout=30s;
        server library-app-three:8080 max_fails=3 fail_timeout=30s;
    }

    # Основной сервер для HTTP
    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;  # Редирект на HTTPS
    }

    # HTTPS сервер
    server {
        listen 443 ssl;
        server_name localhost;

        # SSL настройки
        ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # 4 Защита от брутфорса
        location /login {
            limit_req zone=one burst=5 nodelay;
            proxy_pass http://backend;
        }

        # 4 Ограничение доступа по IP 
        location /admin {
            allow 192.168.1.100;
            deny all;
        }
        # 4 Ограничение методов запроса 
        if ($request_method !~ ^(GET|POST|PUT|HEAD|DELETE)$) {
            return 403;
        }
        
        location / {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';

            # Добавляем заголовок для отслеживания, какой сервер обработал запрос
            add_header X-Upstream $upstream_addr always;
            add_header X-Cache-Status $upstream_cache_status always;

            # Таймауты
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Буферизация
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 4 32k;
            proxy_busy_buffers_size 64k;
        }

        # Обработка ошибок
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
