basePath: /api
definitions:
  models.Book:
    properties:
      author:
        type: string
      available:
        type: boolean
      created_at:
        type: string
      id:
        type: integer
      isbn:
        type: string
      title:
        type: string
      updated_at:
        type: string
    required:
    - author
    - isbn
    - title
    type: object
host: localhost:80
info:
  contact: {}
  description: API для управления библиотекой
  title: Library API
  version: "1.0"
paths:
  /books:
    get:
      description: Получить список всех книг в библиотеке
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
      summary: Получить все книги
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Добавить новую книгу в библиотеку
      parameters:
      - description: Данные новой книги
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать новую книгу
      tags:
      - books
  /books/{id}:
    delete:
      description: Удалить книгу из библиотеки
      parameters:
      - description: ID книги
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить книгу
      tags:
      - books
    get:
      description: Получить детальную информацию о книге по её ID
      parameters:
      - description: ID книги
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить книгу по ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Обновить информацию о существующей книге
      parameters:
      - description: ID книги
        in: path
        name: id
        required: true
        type: integer
      - description: Обновленные данные книги
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновить книгу
      tags:
      - books
swagger: "2.0"
